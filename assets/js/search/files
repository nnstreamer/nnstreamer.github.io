urls_downloaded_cb({"token":"files","urls":[{"url":"coding-convention.html#c-codes-c-sources","node_type":"p","page":"Coding Convention","sections":["Coding Convention","C codes (.c sources)"],"context":{"gi-language":["default"]}},{"url":"coding-convention.html#c-files-cc","node_type":"h2","page":"Coding Convention","sections":["Coding Convention","C++ files (.cc)"],"context":{"gi-language":["default"]}},{"url":"coding-convention.html#c-headers-h","node_type":"p","page":"Coding Convention","sections":["Coding Convention","C headers (.h)"],"context":{"gi-language":["default"]}},{"url":"coding-convention.html#directory-structure-of-nnstreamergit","node_type":"ul","page":"Coding Convention","sections":["File Locations","Directory structure of nnstreamer.git"],"context":{"gi-language":["default"]}},{"url":"coding-convention.html#other-files","node_type":"h2","page":"Coding Convention","sections":["Coding Convention","Other files"],"context":{"gi-language":["default"]}},{"url":"coding-convention.html#related-git-repositories","node_type":"ul","page":"Coding Convention","sections":["File Locations","Related git repositories"],"context":{"gi-language":["default"]}},{"url":"contributing.html#coding-convention","node_type":"p","page":"How to contribute","sections":["How to Contribute","Coding Convention"],"context":{"gi-language":["default"]}},{"url":"doc-index.html#subpages","node_type":"p","page":"Documents","sections":[],"context":{"gi-language":["default"]}},{"url":"doxygen-documentation.html#comments-for-files","node_type":"h3","page":"Doxygen documentation","sections":["How to comment","Comments for Files"],"context":{"gi-language":["default"]}},{"url":"doxygen-documentation.html#how-to-generate-script-code","node_type":"p","page":"Doxygen documentation","sections":["How to generate script code"],"context":{"gi-language":["default"]}},{"url":"ext/nnstreamer/android_source/README.html#motivation","node_type":"p","page":"android_source","sections":["NNStreamer::android_source","Motivation"],"context":{"gi-language":["default"]}},{"url":"features-per-distro.html#ubuntu","node_type":"p","page":"Feature lists of official releases","sections":["Ubuntu"],"context":{"gi-language":["default"]}},{"url":"getting-started-android.html#build-android-api","node_type":"ul","page":"Android","sections":["NNStreamer API Library for Android","Build library","Build Android API"],"context":{"gi-language":["default"]}},{"url":"getting-started-android.html#run-the-unittest-optional","node_type":"p","page":"Android","sections":["NNStreamer API Library for Android","Build library","Run the unit-test (Optional)"],"context":{"gi-language":["default"]}},{"url":"getting-started-android.html#using-model-file-with-scoped-storage","node_type":"ul","page":"Android","sections":["NNStreamer API Library for Android","Build library","Using Model File with Scoped Storage"],"context":{"gi-language":["default"]}},{"url":"getting-started-android.html#using-tensorflow-lite-nnapi-delegate","node_type":"p","page":"Android","sections":["NNStreamer API Library for Android","Build library","Using TensorFlow Lite NNAPI Delegate"],"context":{"gi-language":["default"]}},{"url":"getting-started-macos.html#building-from-source","node_type":"p","page":"macOS","sections":["Installing NNStreamer on macOS","Building from source"],"context":{"gi-language":["default"]}},{"url":"getting-started-meson-build.html#prerequisites","node_type":"ul","page":"Meson/Ninja Build","sections":["Getting Started: Meson/Ninja Build","Prerequisites"],"context":{"gi-language":["default"]}},{"url":"getting-started-tizen.html#install-gbsbuilt-packages-to-target-devices","node_type":"p","page":"Tizen GBS","sections":["Getting Started: Tizen GBS","Install GBS-built packages to target devices"],"context":{"gi-language":["default"]}},{"url":"getting-started-ubuntu-debuild.html#debuild-build-with-system-libraries-ubuntudebian","node_type":"p","page":"Ubuntu Debuild/Pdebuild","sections":["Getting Started: Ubuntu Debuild/Pdebuild","Debuild, build with system libraries. (Ubuntu/Debian)"],"context":{"gi-language":["default"]}},{"url":"getting-started-ubuntu-debuild.html#getting-started-ubuntu-debuildpdebuild","node_type":"p","page":"Ubuntu Debuild/Pdebuild","sections":["Getting Started: Ubuntu Debuild/Pdebuild"],"context":{"gi-language":["default"]}},{"url":"getting-started-ubuntu-debuild.html#pdebuild-a-sandboxed-build-environment-ubuntu-1804-2004","node_type":"p","page":"Ubuntu Debuild/Pdebuild","sections":["Getting Started: Ubuntu Debuild/Pdebuild","Pdebuild, a sandboxed build environment. (Ubuntu 18.04, 20.04)"],"context":{"gi-language":["default"]}},{"url":"how-to-archive-large-data.html#case-study-tfvision_evaluationset-repository","node_type":"p","page":"How to archive large files","sections":["Case study: TF-Vision_EvaluationSet Repository"],"context":{"gi-language":["default"]}},{"url":"how-to-archive-large-data.html#how-to-archive-large-files-with-gitlfs","node_type":"h1","page":"How to archive large files","sections":["How to archive large files with git-lfs"],"context":{"gi-language":["default"]}},{"url":"how-to-archive-large-data.html#reference","node_type":"ul","page":"How to archive large files","sections":["Reference"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.native/ImageClassification/README.html#how-to-install-nnfw-runtime","node_type":"ul","page":"Image Classification (Pipeline)","sections":["Image Classification Sample App with NNStreamer","How to install NNFW runtime"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.native/README.html#tizen-native-c-nnstreamer-example-application","node_type":"p","page":"Tizen Native","sections":["Tizen native (c) NNStreamer Example Application"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.platform/Tizen_IoT_ImageClassification/README.html#how-to-use","node_type":"p","page":"Image classification (Tizen IoT)","sections":["HOW TO USE"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.platform/Tizen_IoT_text_classification_NonGUI/README.html#how-to-use","node_type":"p","page":"Text classification (Tizen IoT)","sections":["HOW TO USE"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.platform/Vivante_pipeline_NonGUI_inceptionV3/README.html#how-to-use","node_type":"p","page":"Vivante Inception (Non GUI)","sections":["HOW TO USE"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.platform/Vivante_pipeline_NonGUI_yoloV3/README.html#how-to-use","node_type":"p","page":"Vivante Yolo (Non GUI)","sections":["HOW TO USE"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/Tizen.platform/Vivante_single_NonGUI_inceptionV3/README.html#how-to-use","node_type":"p","page":"Vivante Inception (Single, Non GUI)","sections":["HOW TO USE"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/bash_script/example_early_exit/README.html#prerequisite","node_type":"p","page":"Early Exit Network","sections":["NNStreamer Native Sample Application - Early exit network","prerequisite"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/bash_script/example_image_segmentation_tensorflow_lite/README.html#how-to-run","node_type":"ul","page":"Image Segmentation (edgeTPU)","sections":["NNStreamer Edge-AI Apllication - Image Segmentation (edgeTPU)","How to run"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/native/example_object_detection_tensorflow_lite/README.html#how-to-run","node_type":"p","page":"Object Detection (tflite)","sections":["Ubuntu Native NNStreamer Application Example - Object Detection","How to Run"],"context":{"gi-language":["default"]}},{"url":"nnstreamer-example/native/example_object_detection_tflite_2cam/README.html#how-to-run","node_type":"p","page":"Object Detection (2 cam)","sections":["Object Detection with 2 cameras","How to Run"],"context":{"gi-language":["default"]}},{"url":"nnstreamer_capi.html#machine-learning-inference","node_type":"ul","page":"NNStreamer C-API","sections":["Machine Learning Inference"],"context":{"gi-language":["default"]}},{"url":"tools/debugging/README.html#generating-pipeline-graph-with-gst_debug_dump_dot_dir","node_type":"p","page":"Debugging tools","sections":["Debugging","Generating pipeline graph with $GST_DEBUG_DUMP_DOT_DIR"],"context":{"gi-language":["default"]}},{"url":"tools/debugging/README.html#gstreamer-application-macros-for-custom-gsteamer-application","node_type":"p","page":"Debugging tools","sections":["Debugging","Generating pipeline graph with $GST_DEBUG_DUMP_DOT_DIR","GStreamer application macros for custom GSteamer application"],"context":{"gi-language":["default"]}},{"url":"tools/profiling/README.html#features","node_type":"ul","page":"Profiling tools","sections":["Profiling","HawkTracer","Features"],"context":{"gi-language":["default"]}},{"url":"tools/tracing/README.html#getting-started-how-to-generate-trace-files","node_type":"h5","page":"Tracing tools","sections":["Tracing","Using GstShark","Case study","Getting started: How to generate trace files"],"context":{"gi-language":["default"]}}]});
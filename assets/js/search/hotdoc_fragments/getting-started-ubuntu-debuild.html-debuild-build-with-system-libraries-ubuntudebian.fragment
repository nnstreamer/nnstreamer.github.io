fragment_downloaded_cb({"url":"getting-started-ubuntu-debuild.html#debuild-build-with-system-libraries-ubuntudebian","fragment":"Debuild, build with system libraries. (Ubuntu/Debian)\nAfter installing all the required packages to your system, you may run debuild to get .deb packages.\nIn Ubuntu, you may prepare your system easily with the following commands, which installs prebuilt binaries from nnstreamer's PPA repository.\nNote that ssat is required for unit testing. You may download it at Github SSAT.\nRefer to debuild command for how to use debuild.\n1. Clone the needed repositories\nYou may skip this if you have downloaded and installed PPA packages of SSAT and tensorflow.\n2. Fix tensorflow build errors\nYou may skip this if you have downloaded and installed PPA packages of SSAT and tensorflow.\nA script, tensorflow/contrib/lite/Makefile, may fail, depending your shell.\nReplace the ARCH macro (HOST_ARCH in some versions):\nFrom:\nTo:\n3. Prepare for debuild (installing required dependencies).\nSkip ssat and tensorflow if you have already installed them.\n4. Run debuild and get .deb packages.\nSkip ssat and tensorflow if you have already installed them.\nIf there is a missing package, debuild will tell you which package is missing.\nIf you haven't configured debuild properly, yet, you will need to add -uc -us options to debuild.\n5. Install the generated .deb files.\nSkip ssat and tensorflow if you have already installed them.\nThe files will be there at the parent dir. E. g. at nnbuilder/.. directory.\nIn order to install them (should run as root):\nIf you need nnstreamer development package:\n"});
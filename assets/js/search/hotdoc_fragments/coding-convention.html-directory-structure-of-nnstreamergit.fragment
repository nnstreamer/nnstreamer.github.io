fragment_downloaded_cb({"url":"coding-convention.html#directory-structure-of-nnstreamergit","fragment":"Directory structure of nnstreamer.git\n\n\napi: API definitions and implementations\n\n\nandroid: Android APIs\n\ncapi: C-APIs (Tizen and others)\nNote that .NET APIs are located at https://github.com/Samsung/TizenFX along with other Tizen .NET APIs\n\n\n\ndebian: Debian/Ubuntu packaging files\n\nDocumentation: Documentations\n\next/nnstreamer: NNStreamer plugins and subplugins that depend on optional or non-standard external packages. Components in this directory can be built and included optionally.\n\n\nandroid_source: Plugins required to support Android/JAVA APIs.\n\ntensor_decoder: Decoder subplugins\n\ntensor_filter: Filter subplugins\n\ntensor_source: Source elements that provide tensor/tensors streams. We do not have subplugin architectures for sources.\nPotentially we can add tensor_converter here later for converter subplugins. We do not have converter subplugins released, yet.\n\n\n\ngst/nnstreamer: All core nnstreamer codes are located here.\n\n**tensor_* **: Plugins of nnstreamer.\n\n\n\njni: Android/Java build scripts.\n\nnnstreamer_example: Example custom filters required by test cases. In the old days, we used to have all nnstreamer examples here. Most of such examples are moved to Example git except for those who required by test cases.\n\npackaging: Tizen RPM build scripts. OpenSUSE/Redhat Linux may reuse this.\n\ntests: Unit test cases. We have SSAT test cases and GTEST test cases. There are a lot of subdirectories, which are groups of unit test cases.\n\ntools: Various developmental tools and scripts of NNStreamer.\n\n\n\nandroid: Android APIs\n\ncapi: C-APIs (Tizen and others)\nNote that .NET APIs are located at https://github.com/Samsung/TizenFX along with other Tizen .NET APIs\n\n\n\nandroid_source: Plugins required to support Android/JAVA APIs.\n\ntensor_decoder: Decoder subplugins\n\ntensor_filter: Filter subplugins\n\ntensor_source: Source elements that provide tensor/tensors streams. We do not have subplugin architectures for sources.\nPotentially we can add tensor_converter here later for converter subplugins. We do not have converter subplugins released, yet.\n\n\n**tensor_* **: Plugins of nnstreamer.\n\n"});
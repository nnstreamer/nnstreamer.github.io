fragment_downloaded_cb({"url":"nnstreamer_capi.html#tensors-information","fragment":"Tensors Information\nml_tensors_info_h contains the information of tensors. The tensor info can be managed using the following functions:\nCreate and destroy\nSet functions\nGet functions\n\n\nCreate and destroy\nml_tensors_info_h info;\nstatus = ml_tensors_info_create (&info);\nstatus = ml_tensors_info_destroy (info);\n\n\n\nSet functions\n/* Set how many tensors exist */\nstatus = ml_tensors_info_set_count (info, 1);\n\n/* Set the type of the tensor_0 as UINT8 */\nstatus = ml_tensors_info_set_tensor_type (info, 0, ML_TENSOR_TYPE_UINT8);\n\n/* Set the dimension of the tensor_0 as in_dim */\nstatus = ml_tensors_info_set_tensor_dimension (info, 0, in_dim);\n\n/* Set the name of the tensor_0 as \"tensor-name-test\" */\nstatus = ml_tensors_info_set_tensor_name (info, 0, \"tensor-name-test\");\n\n\n\nGet functions\n/* Get how many tensors exist */\nstatus = ml_tensors_info_get_count (info, &num);\n\n/* Get the type of the tensor_0 */\nstatus = ml_tensors_info_get_tensor_type (info, 0, &out_type);\n\n/* Get the dimension of the tensor_0 */\nstatus = ml_tensors_info_get_tensor_dimension (info, 0, in_dim);\n\n/* Get the name of the tensor_0 */\nstatus = ml_tensors_info_get_tensor_name (info, 0, &out_name);\n\n/* Get the size of the tensor_0 */\nstatus = ml_tensors_info_get_tensor_size (info, 0, &data_size);\n\n\n\n"});
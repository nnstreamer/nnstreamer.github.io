fragment_downloaded_cb({"url":"Documentation/how-to-run-examples.html#page-description","fragment":"If you don't mind building binaries, you can directly download from PPA with daily releases:\nNote that this may install tensorflow packaged by us.\nAs of 2018/10/13, we support 16.04 and 18.04\nBuild options (meson)\nFor example, to build and install NNStreamer by enabling C-API and disabling tensorflow2-lite,\nBuild source code\nThe stream pipeline in this example is:\nThe same stream pipeline implementation with C-API is at nnstreamer-example.git/native/example_decoder_image_labelling/\nDisplays a video sink.\n \nDisplays a video sink.\nDisplays a video sink.\nDisplays two video sinks,\nIn pipeline, converter-decoder passes video frame.\nTwo simple examples to use tensor sink.\nDisplays nothing, this sample code shows how to get buffer from tensor sink.\nDisplays video sink.\nTensor sink receives buffer and pushes it into appsrc in 2nd pipeline.\n\n\nPreparing nnstreamer for execution\n\nUse PPA\nBuild examples (Ubuntu 16.04)\n\n\n\nUsage Examples\n\nExample : camera live-view image classification. w/ gst-launch, decoded by tensor_decoder\nExample : camera live-view image classification, decoded by user application\nExample : camera live-view object detection, decoded by user application with Tensorflow-Lite\nExample : camera live-view object detection, decoded by user application with Tensorflow\nExample : video mixer with NNStreamer plug-in\nExample : tensor sink\n\n\n\n\nUse PPA\nBuild examples (Ubuntu 16.04)\n\n\nExample : camera live-view image classification. w/ gst-launch, decoded by tensor_decoder\nExample : camera live-view image classification, decoded by user application\nExample : camera live-view object detection, decoded by user application with Tensorflow-Lite\nExample : camera live-view object detection, decoded by user application with Tensorflow\nExample : video mixer with NNStreamer plug-in\nExample : tensor sink\n\n\nDownload nnstreamer :\n\n\nDownload nnstreamer example :\n\n\nhttps://github.com/nnstreamer/nnstreamer/blob/main/Documentation/getting-started.md\n\n\nInstall related packages before building nnstreamer and examples.\n\n\n\nBuild options (meson)\n\nYou can find the option definitions here: meson options\n\nFor more information about meson build options itself, see here.\n\nFor example, to build and install NNStreamer by enabling C-API and disabling tensorflow2-lite,\n$ meson --prefix=${NNST_ROOT} --sysconfdir=${NNST_ROOT} --libdir=lib --bindir=bin --includedir=include -Denable-capi=true -Dtflite2-support=disabled build\n\n\n\nBuild source code\n\n\n\nYou can find the option definitions here: meson options\n\nFor more information about meson build options itself, see here.\n\n\nDownload tensorflow-lite model & labels.\n\n\nRun example\n\n\nScreenshot\n\n\nRun example - with execution file\n\n\nRun example - with bash script\n\n\nScreenshot\n\n\nRun example - with execution file\n\n\nRun example - with bash script\n\n\nScreenshot\n\n\nRun example\n\n\nScreenshot\n\n\nRun example\n\n\nRun example\n\n"});
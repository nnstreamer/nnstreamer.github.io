fragment_downloaded_cb({"url":"getting-started-meson-build.html#prerequisites","fragment":"Prerequisites\nThe following dependencies are needed to compile/build/run.\nThe minimal requirement to build nnstreamer with default configuration is\n1. Clone the needed repositories\n2. Fix tensorflow build errors\nYou may skip this if you have downloaded binary packages from PPA.\nA script, tensorflow/contrib/lite/Makefile, may fail, depending your shell.\nReplace the ARCH macro (HOST_ARCH in some versions):\nFrom:\nTo:\n3. Configure the build\nConfigure build in ./build directory with default options.\nFor possible configurations, please refer to meson_options.txt.\nIf you want to designate nnstreamer's binary locations, provide such with --prefix, --sysconfdir, --libdir, --bindir, and --includedir.\nFor example, in order to install as general Linux system libraries you may configure:\nDocumentation for possible meson options: WIP\n4. Build\nAssuming you have configured meson at ./build.\n5. Install\nAssuming you have configured meson at ./build.\nThen, it will install:\n6. Verifying installation\nUnless you have given sysconfdir (--sysconfdir meson option), /etc/nnstreamer.ini is the default configuration file. If --sysconfdir was given at build time, the default configuration file is at {sysconfdir}/nnstreamer.ini.\nUnless overriden by envvars, the paths in the .ini file are used to search for subplugins. Therefore, if a subplugin (e.g., tensorflow-lite filter) does not work, check the subplugin locations and their configurations first.\nWe will supply utility to verify such issues automatically soon: https://github.com/nnstreamer/nnstreamer/issues/2638 (nnstreamer-util's nnstreamer-check).\n\ngcc/g++ (C++14 if you want C++-class as filters)\ngstreamer 1.0 and its relatives\nglib 2.0\nmeson >= 0.50\nninja-build\nNeural network frameworks or libraries for plugins (e.g., tensorflow) you want to use, including their pkgconfig files or mechanisms to support meson to discover the corresponding frameworks. If you use our packages for tensorflow/pytorch, you do not need to worry.\n\nPossible frameworks for \"extra\" plugins: tensorflow, pytorch, protobuf, flatbuf, openvino, ncsdk2, Verisilicon-Vivante, SNPE, ...\n\n\n\nSSAT (optional. required for unit testing)\ngtest (optional. required for unit testing)\n\n\nPossible frameworks for \"extra\" plugins: tensorflow, pytorch, protobuf, flatbuf, openvino, ncsdk2, Verisilicon-Vivante, SNPE, ...\n\n\nnnstreamer plugins to {libdir}/gstreamer-1.0/\n\nlibraries to {libdir}/\n\nsubplugins to {prefix}/lib/nnstreamer/PLUGIN-TYPE/\n\ncommon header files to {includedir}/\n\n\n"});
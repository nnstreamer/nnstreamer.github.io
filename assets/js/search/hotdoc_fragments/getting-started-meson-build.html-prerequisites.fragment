fragment_downloaded_cb({"url":"getting-started-meson-build.html#prerequisites","fragment":"Prerequisites\nThe following dependencies are needed to compile/build/run.\nThe minimal requirement to build nnstreamer with default configuration is\nOptional utilities:\nYou may build and install iniparser and ssat directly from their sources, too.\n1. Clone nnstreamer\n2. Install related frameworks\nOption A: You may install optional developmental packages from nnstreamer PPA for more subplugins and extra plugins (choose what you need):\nOption B: Build & install your own frameworks and provide corresponding pkg-config files.\ntensorflow2-lite pkgconfig file template /\ntensorflow1-lite pkgconfig file template /\ntensorflow1 pkgconfig file template\nFill in paths of libdir and includedir of the frameworks and place the .pc files at /usr/lib/pkgconfig/\n3. Configure the build\nConfigure build in ./build directory with default options.\nFor possible configurations, please refer to meson_options.txt.\nIf you want to designate nnstreamer's binary locations, provide such with --prefix, --sysconfdir, --libdir, --bindir, and --includedir.\nFor example, in order to install as general Linux system libraries you may configure:\nOr You can set your own path to install libraries and header files.\n4. Build\nAssuming you have configured meson at ./build.\n5. Install\nAssuming you have configured meson at ./build.\nOr if you want somewhere else:\nThen, it will install:\n6. Verifying installation\nAssuming you have configured meson at ./build.\nnnstreamer-check utility shows the status of your nnstreamer installation.\nIt uses environmental-variables, nnstreamer.ini file, and hardcoded default values, with the respective order.\n\ngcc/g++ (C++14 if you want C++-class as filters)\ngstreamer 1.0 and its relatives\nglib 2.0\nmeson >= 0.50\nninja-build\nNeural network frameworks or libraries for plugins (e.g., tensorflow) you want to use, including their pkgconfig files or mechanisms to allow meson to discover its headers and libraries. If you use development packages packaged by us for tensorflow/pytorch/openvino/..., you do not need to worry.\n\nPossible frameworks for \"extra\" plugins: tensorflow, tensorflow-lite, pytorch, protobuf, flatbuf, openvino, ncsdk2, Verisilicon-Vivante, SNPE, TensorRT, mqtt, ...\n\n\n\nSSAT (optional. required for unit testing)\ngtest (optional. required for unit testing)\n\n\nPossible frameworks for \"extra\" plugins: tensorflow, tensorflow-lite, pytorch, protobuf, flatbuf, openvino, ncsdk2, Verisilicon-Vivante, SNPE, TensorRT, mqtt, ...\n\n\nnnstreamer plugins to {libdir}/gstreamer-1.0/\n\nlibraries to {libdir}/\n\nsubplugins to {prefix}/lib/nnstreamer/PLUGIN-TYPE/\n\ncommon header files to {includedir}/\n\n\n"});
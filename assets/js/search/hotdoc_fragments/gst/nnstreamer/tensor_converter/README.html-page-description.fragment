fragment_downloaded_cb({"url":"gst/nnstreamer/tensor_converter/README.html#page-description","fragment":"From higher priority\nOne \"Always\" sink pad exists. The capability of sink pad is video/x-raw, audio/x-raw, text/x-raw and application/octet-stream.\nOne \"Always\" source pad exists. The capability of source pad is other/tensor. It does not support other/tensors because each frame (or a set of frames consisting a buffer) is supposed to be represented by a single tensor instance.\nFor each outgoing frame (on the source pad), there always is a single instance of other/tensor. Not less and not more.\n\nVideo: direct conversion of video/x-raw / non-interlace(progressive) to [height][width][#Colorspace] tensor. (#Colorspace:width:height:frames-per-tensor)\n\nSupported colorspaces: RGB (3), BGRx (4), Gray8 (1)\nYou may express frames-per-tensor to have multiple image frames in a tensor like audio and text as well.\nIf frames-per-tensor is not configured, the default value is 1.\nGolden tests for such input\n\n\nAudio: direct conversion of audio/x-raw with arbitrary numbers of channels and frames per tensor to [frames-per-tensor][channels] tensor. (channels:frames-per-tensor)\n\nThe number of frames per tensor is supposed to be configured manually by stream pipeline developer with the property of frames-per-tensor.\nIf frames-per-tensor is not configured, the default value is 1.\n\n\nText: direct conversion of text/x-raw with UTF-8 to [frames-per-tensor][input-dim] tensor. (input-dim:frames-per-tensor)\n\nThe number of frames per tensor is supposed to be configured manually by stream pipeline developer with the property of frames-per-tensor.\nIf frames-per-tensor is not configured, the default value is 1.\nThe size of a text frame should be configured by developer with the property input-dim. Because the dimension of tensor is the key metadata of a tensor stream pipeline, we need to fix the value before actually looking at the actual stream data.\n\n\n\n\nSupported colorspaces: RGB (3), BGRx (4), Gray8 (1)\nYou may express frames-per-tensor to have multiple image frames in a tensor like audio and text as well.\nIf frames-per-tensor is not configured, the default value is 1.\nGolden tests for such input\n\n\nThe number of frames per tensor is supposed to be configured manually by stream pipeline developer with the property of frames-per-tensor.\nIf frames-per-tensor is not configured, the default value is 1.\n\n\nThe number of frames per tensor is supposed to be configured manually by stream pipeline developer with the property of frames-per-tensor.\nIf frames-per-tensor is not configured, the default value is 1.\nThe size of a text frame should be configured by developer with the property input-dim. Because the dimension of tensor is the key metadata of a tensor stream pipeline, we need to fix the value before actually looking at the actual stream data.\n\n\nSupport other color spaces (IUV, BGGR, ...)\n\n\nVideo\n\nUnless it is RGB with width % 4 > 0 or Gray8 with width % 4 > 0, there are no memcpy or data modification processes. It only converts meta data in such cases.\nOtherwise, there will be one memcpy for each frame.\n\n\nAudio\n\nTBD.\n\n\nText\n\nTBD.\n\n\n\n\nUnless it is RGB with width % 4 > 0 or Gray8 with width % 4 > 0, there are no memcpy or data modification processes. It only converts meta data in such cases.\nOtherwise, there will be one memcpy for each frame.\n\n\nTBD.\n\n\nTBD.\n\n\nframes-per-tensor: The number of incoming media frames that will be contained in a single instance of tensors. With the value > 1, you can put multiple frames in a single tensor.\n\n\nsilent: Enable/disable debugging messages.\n\n"});
fragment_downloaded_cb({"url":"gst/nnstreamer/tensor_if/README.html#properties","fragment":"Properties\ncompared-value: Specifies the compared value and is represented as operand 1 from input tensors.\ncompared-value-option: Specifies an element of the nth tensor or you can pick one from the tensors.\nsupplied-value: Specifies the supplied value (SV) from the user.\noperator: Comparison Operator\nthen: Action if it is TRUE\nthen-option: Option for TRUE Action\nelse: Action if it is FALSE\nelse-option: Option for FALSE Action\n\n\ncompared-value: Specifies the compared value and is represented as operand 1 from input tensors.\n\nA_VALUE: Decided based on a single scalar value.\nTENSOR_AVERAGE_VALUE: Decided based on an average value of a specific tensor.\nCUSTOM: Decided based on a user-defined callback.\n\n\n\ncompared-value-option: Specifies an element of the nth tensor or you can pick one from the tensors.\n\n[C][W][H][B],n: used for A_VALUE of the compared-value, for example 0:1:2:3,0 means [0][1][2][3] value of first tensor.\nnth tensor: used for TENSOR_AVERAGE_VALUE of the compared-value, and specifies which tensor is used.\n\n\n\nsupplied-value: Specifies the supplied value (SV) from the user.\n\nSV\nSV1, SV2 (used for RANGE operators)\n\n\n\noperator: Comparison Operator\n\nEQ: Check if CV == SV\nNEQ: Check if CV != SV\nGT: Check if CV > SV\nGE: Check if CV >= SV\nLT: Check if CV < SV\nLE: Check if CV <= SV\nRANGE_INCLUSIVE: Check if SV1 <= CV and CV <= SV2\nRANGE_EXCLUSIVE: Check if SV1 < CV and CV < SV2\nNOT_IN_RANGE_INCLUSIVE: Check if CV < SV1 or SV2 < CV\nNOT_IN_RANGE_EXCLUSIVE: Check if CV <= SV1 or SV2 <= CV\n\n\n\nthen: Action if it is TRUE\n\nPASSTHROUGH: Does not let you make changes to the buffers. Buffers are pushed straight through.\nSKIP: Does not let you generate the output frame (frame skip).\nTENSORPICK: Lets you choose the nth tensor among the input tensors.\n\n\n\n\nA_VALUE: Decided based on a single scalar value.\nTENSOR_AVERAGE_VALUE: Decided based on an average value of a specific tensor.\nCUSTOM: Decided based on a user-defined callback.\n\n\n[C][W][H][B],n: used for A_VALUE of the compared-value, for example 0:1:2:3,0 means [0][1][2][3] value of first tensor.\nnth tensor: used for TENSOR_AVERAGE_VALUE of the compared-value, and specifies which tensor is used.\n\n\nSV\nSV1, SV2 (used for RANGE operators)\n\n\nEQ: Check if CV == SV\nNEQ: Check if CV != SV\nGT: Check if CV > SV\nGE: Check if CV >= SV\nLT: Check if CV < SV\nLE: Check if CV <= SV\nRANGE_INCLUSIVE: Check if SV1 <= CV and CV <= SV2\nRANGE_EXCLUSIVE: Check if SV1 < CV and CV < SV2\nNOT_IN_RANGE_INCLUSIVE: Check if CV < SV1 or SV2 < CV\nNOT_IN_RANGE_EXCLUSIVE: Check if CV <= SV1 or SV2 <= CV\n\n\nPASSTHROUGH: Does not let you make changes to the buffers. Buffers are pushed straight through.\nSKIP: Does not let you generate the output frame (frame skip).\nTENSORPICK: Lets you choose the nth tensor among the input tensors.\n\n\n\nthen-option: Option for TRUE Action\n\nnth tensor: used for TENSORPICK option, for example, then-option=0,2 means tensor 0 and tensor 2 are selected as output tensors among the input tensors.\n\n\n\nelse: Action if it is FALSE\n\nPASSTHROUGH: Does not let you make changes to the buffers. Buffers are pushed straight through.\nSKIP: Does not let you generate the output frame (frame skip).\nTENSORPICK: Lets you choose the nth tensor among the input tensors.\n\n\n\nelse-option: Option for FALSE Action\n\nnth tensor: used for TENSORPICK option, for example, else-option=0,2 means tensor 0 and tensor 2 are selected as output tensors among the input tensors.\n\n\n\n\nnth tensor: used for TENSORPICK option, for example, then-option=0,2 means tensor 0 and tensor 2 are selected as output tensors among the input tensors.\n\n\nPASSTHROUGH: Does not let you make changes to the buffers. Buffers are pushed straight through.\nSKIP: Does not let you generate the output frame (frame skip).\nTENSORPICK: Lets you choose the nth tensor among the input tensors.\n\n\nnth tensor: used for TENSORPICK option, for example, else-option=0,2 means tensor 0 and tensor 2 are selected as output tensors among the input tensors.\n\n"});
fragment_downloaded_cb({"url":"component-description.html#gstreamer-stream-data-types","fragment":"Gstreamer Stream Data Types\nEach frame of an other/tensor or other/tensors stream should have only ONE instance of other/tensor or other/tensors.\nExcept tensor_decoder, which accepts data semantics from pipeline developers, and tensor_converter, which accepts data semantics from sink pad caps, every NNStreamer tensor plugin and tensor stream should be agnostic to the data semantics. With data semantics, we know whether the corresponding tensor denotes for video, audio, text, or any other \"meaningful data types\". The NNStreamer elements and data-pipeline, being agnostic to such semantics, should treat every other/tensor and other/tensors as multi-dimensional arrays of general numbers. This allows inter-operability between different neural network models and frameworks. The semantics of tensors should be handled and encapsulated by their direct accessors: the pipeline writer (or the application) and the corresponding framework (and its subplugin).\n\nother/tensor (obsolete! use other/tensors,num_tensors=1 instead)\nother/tensors\n\n"});